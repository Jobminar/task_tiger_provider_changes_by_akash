trigger:
  branches:
    include:
      - main  # Adjust this according to your branch naming

pool:
  name: 'tt-devops-build'
  demands:
    - Agent.Version -gtVersion 2.199.0  # Remove the 'java' demand if it causes issues

stages:
  - stage: Build
    displayName: "Build APK"
    jobs:
      - job: BuildAPK
        displayName: "Build Android APK"
        steps:
          # Checkout the source code
          - checkout: self

          #Set up JDK (required for Gradle)
          # Set JAVA_HOME to the pre-installed JDK location
          - script: |
              echo "Setting JAVA_HOME to the pre-installed JDK"
              echo ##vso[task.setvariable variable=JAVA_HOME]C:\Program Files\Java\jdk-17
              echo %JAVA_HOME%
            displayName: 'Set JAVA_HOME'

          # Print JAVA version to ensure the correct JDK is used
          - script: |
              echo "Checking Java version"
              java -version
            displayName: 'Check Java Version'
          # Ensure local.properties is set up correctly for SDK path
          - script: |
              echo "sdk.dir=C:\\Program Files (x86)\\Android\\android-sdk" > android/local.properties
            displayName: 'Set SDK path in local.properties'

          # Sync Capacitor plugins
          - script: |
              npm install
              npx cap sync android
            displayName: 'Sync Capacitor Plugins'

          # Gradle build task to assemble the APK
          - task: Gradle@2
            inputs:
              gradleWrapperFile: 'android/gradlew'  # Path to your Gradle wrapper
              workingDirectory: 'android'  # Path to the directory containing your build.gradle file
              tasks: 'assembleDebug'  # Change to 'assembleDebug' if you want a debug build
              options: '-x lint' 
            displayName: 'Build APK'

          # # Publish the build artifact
          # - task: PublishPipelineArtifact@1
          #   inputs:
          #     artifactName: 'APK'
          #     targetPath: '$(Build.ArtifactStagingDirectory)'
          #     publishLocation: 'pipeline'
          #   displayName: 'Publish APK Artifacts'


          # # List APK directory (Optional - for debugging purposes)
          # - script: |
          #     dir android/app/build/outputs/apk/release
          #   displayName: 'List APK Files'

          # Publish the APK file as an artifact
          # - task: PublishPipelineArtifact@1
          #   inputs:
          #     targetPath: 'android/app/build/outputs/apk/debug/'  # Update this to the path where APK is generated
          #     artifactName: 'APK'
          #   displayName: 'Publish APK Artifacts'

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: 'android/app/build/outputs/apk/debug/'  # Update this to the path where APK is generated
              artifactName: 'APK'
            displayName: 'Publish APK Artifacts'

          # - publish: '$(Build.ArtifactStagingDirectory)/frontend.zip'
          #   artifact: 'frontendArtifact'
          #   displayName: 'Publish Frontend Artifact'
